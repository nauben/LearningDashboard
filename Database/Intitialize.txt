/*

This script can be used to initialize the database necessary for the application on a Postrgre-database.

*/

DROP SCHEMA public CASCADE;
CREATE SCHEMA public;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO public;
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

create table "User" (
	"id" uuid not null default uuid_generate_v4(),
	"email" VARCHAR(255) NOT NULL,
	"password" VARCHAR(255) NOT NULL,
	"firstname" VARCHAR(255) NOT NULL,
	"lastname" VARCHAR(255) NOT NULL,
	"institution"VARCHAR(255),
	"location" VARCHAR(255),
	"picture-url" VARCHAR(255),
	"last-Login" TIMESTAMP NOT NULL DEFAULT date_trunc('second', CURRENT_TIMESTAMP),
	"created" TIMESTAMP NOT NULL DEFAULT date_trunc('second', CURRENT_TIMESTAMP),
	"activated" Boolean not null,
	"blocked" boolean not null,
	CONSTRAINT "User_pk" PRIMARY KEY ("id")
)with( OIDS=FALSE);

CREATE TABLE "Settings" (
	"user-id" uuid NOT NULL,
	"visibility" integer NOT null default 0,
	"email-notification" BOOLEAN NOT null,
	CONSTRAINT "Settings_pk" PRIMARY KEY ("user-id")
) WITH (
  OIDS=FALSE
);

ALTER TABLE "Settings" ADD CONSTRAINT "Settings_fk0" FOREIGN KEY ("user-id") REFERENCES "User"("id");

CREATE TABLE "Schedule-Settings" (
	"user-id" uuid NOT NULL,
	"course" VARCHAR(100),
	CONSTRAINT "Schedule-Settings_pk" PRIMARY KEY ("user-id")
) WITH (
  OIDS=FALSE
);

ALTER TABLE "Schedule-Settings" ADD CONSTRAINT "Schedule-Settings_fk0" FOREIGN KEY ("user-id") REFERENCES "User"("id");

CREATE TABLE "Task" (
	"id" uuid not null default uuid_generate_v4(),
	"swimlane" integer NOT NULL,
	"title" VARCHAR(255) NOT NULL,
	"description" VARCHAR(255) not NULL,
	"label" integer not null,
	"due-date" TIMESTAMP ,
	"created" TIMESTAMP NOT NULL DEFAULT date_trunc('second', CURRENT_TIMESTAMP),
	"created-by" uuid NOT NULL,
	"updated" TIMESTAMP NOT NULL DEFAULT date_trunc('second', CURRENT_TIMESTAMP),
	"updated-by" uuid NOT NULL,
	CONSTRAINT "Task_pk" PRIMARY KEY ("id")
) WITH (
  OIDS=FALSE
);

ALTER TABLE "Task" ADD CONSTRAINT "Task_fk0" FOREIGN KEY ("created-by") REFERENCES "User"("id");
ALTER TABLE "Task" ADD CONSTRAINT "Task_fk1" FOREIGN KEY ("updated-by") REFERENCES "User"("id");

CREATE TABLE "TaskUser" (
	"id" uuid not null default uuid_generate_v4(),
	"task-id" uuid not null,
	"user-id" uuid not null,
	CONSTRAINT "TaskUser_pk" PRIMARY KEY ("id")
) WITH (
  OIDS=FALSE
);

ALTER TABLE "TaskUser" ADD CONSTRAINT "TaskUser_fk0" FOREIGN KEY ("user-id") REFERENCES "User"("id");
ALTER TABLE "TaskUser" ADD CONSTRAINT "TaskUser_fk1" FOREIGN KEY ("task-id") REFERENCES "Task"("id");

CREATE TABLE "Checklist" (
	"id" uuid not null default uuid_generate_v4(),
	"task-id"uuid NOT NULL,
	"checked" BOOLEAN NOT null default false,
	"description" VARCHAR(255) NOT NULL,
	CONSTRAINT "Checklist_pk" PRIMARY KEY ("id")
) WITH (
  OIDS=FALSE
);

ALTER TABLE "Checklist" ADD CONSTRAINT "Checklist_fk0" FOREIGN KEY ("task-id") REFERENCES "Task"("id");

CREATE TABLE "Comments" (
	"id" uuid not null default uuid_generate_v4(),
	"task-id" uuid NOT NULL,
	"user-id" uuid not null,
	"message" VARCHAR(255) not null,
	"Timestamp" TIMESTAMP NOT NULL DEFAULT date_trunc('second', CURRENT_TIMESTAMP),
	CONSTRAINT "Comments_pk" PRIMARY KEY ("id")
) WITH (
  OIDS=FALSE
);

ALTER TABLE "Comments" ADD CONSTRAINT "Comments_fk0" FOREIGN KEY ("task-id") REFERENCES "Task"("id");

CREATE TABLE "Activities" (
	"id" uuid not null default uuid_generate_v4(),
	"user-id" uuid NOT NULL,
	"timestamp" TIMESTAMP NOT NULL DEFAULT date_trunc('second', CURRENT_TIMESTAMP),
	"activity" integer NOT NULL,
	"task-id" uuid NOT NULL,
	CONSTRAINT "Activities_pk" PRIMARY KEY ("id")
) WITH (
  OIDS=FALSE
);

ALTER TABLE "Activities" ADD CONSTRAINT "Activities_fk0" FOREIGN KEY ("user-id") REFERENCES "User"("id");
ALTER TABLE "Activities" ADD CONSTRAINT "Activities_fk1" FOREIGN KEY ("task-id") REFERENCES "Task"("id");

CREATE TABLE "Messages" (
	"id" uuid not null default uuid_generate_v4(),
	"user-id" uuid NOT NULL,
	"timestamp" TIMESTAMP NOT null DEFAULT date_trunc('second', CURRENT_TIMESTAMP),
	"message" VARCHAR(255) NOT NULL,
	"link" VARCHAR(255) NOT NULL,
	CONSTRAINT "Messages_pk" PRIMARY KEY ("id")
) WITH (
  OIDS=FALSE
);

ALTER TABLE "Messages" ADD CONSTRAINT "Messages_fk0" FOREIGN KEY ("user-id") REFERENCES "User"("id");

CREATE TABLE "Subjects" (
	"id" uuid not null default uuid_generate_v4(),
	"user-id" uuid NOT NULL,
	"subject" VARCHAR(255) NOT NULL,
	CONSTRAINT "Subjects_pk" PRIMARY KEY ("id")
) WITH (
  OIDS=FALSE
);

ALTER TABLE "Subjects" ADD CONSTRAINT "Subjects_fk0" FOREIGN KEY ("user-id") REFERENCES "User"("id");

CREATE TABLE "SubjectTimes" (
	"id" uuid not null default uuid_generate_v4(),
	"subject-id" uuid NOT NULL,
	"time" bigint NOT NULL DEFAULT 0,
	"timestamp" TIMESTAMP NOT NULL DEFAULT date_trunc('second', CURRENT_TIMESTAMP),
	CONSTRAINT "SubjectTimes_pk" PRIMARY KEY ("id")
) WITH (
  OIDS=FALSE
);

ALTER TABLE "SubjectTimes" ADD CONSTRAINT "SubjectTimes_fk0" FOREIGN KEY ("subject-id") REFERENCES "Subjects"("id");


/*CREATE TABLE "Learning-Statistics" (
	"id" uuid not null default uuid_generate_v4(),
	"user-id" uuid NOT NULL,
	"subject" VARCHAR(255) NOT NULL,
	"time" bigint NOT NULL DEFAULT 0,
	"Since" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT "Learning-Statistics_pk" PRIMARY KEY ("id")
) WITH (
  OIDS=FALSE
);

ALTER TABLE "Learning-Statistics" ADD CONSTRAINT "Learning-Statistics_fk0" FOREIGN KEY ("user-id") REFERENCES "User"("id");
*/


CREATE TABLE "Contacts" (
	"user-id" uuid NOT NULL,
	"contact-id" uuid NOT NULL,
	"accepted" BOOLEAN NOT null default false,
	CONSTRAINT "Contacts_pk" PRIMARY KEY ("user-id","contact-id")
) WITH (
  OIDS=FALSE
);

ALTER TABLE "Contacts" ADD CONSTRAINT "Contacts_fk0" FOREIGN KEY ("user-id") REFERENCES "User"("id");
ALTER TABLE "Contacts" ADD CONSTRAINT "Contacts_fk1" FOREIGN KEY ("contact-id") REFERENCES "User"("id");

CREATE TABLE "Tokens" (
	"token" VARCHAR(255) NOT NULL,
	"timestamp" TIMESTAMP NOT null default date_trunc('second', CURRENT_TIMESTAMP),
	CONSTRAINT "Tokens_pk" PRIMARY KEY ("token")
) WITH (
  OIDS=FALSE
);
